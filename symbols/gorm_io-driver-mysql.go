// Code generated by 'yaegi extract gorm.io/driver/mysql'. DO NOT EDIT.

package symbols

import (
	"go/constant"
	"go/token"
	"gorm.io/driver/mysql"
	"reflect"
)

func init() {
	Symbols["gorm.io/driver/mysql/mysql"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AutoRandomTag":     reflect.ValueOf(constant.MakeFromLiteral("\"auto_random()\"", token.STRING, 0)),
		"ClauseFor":         reflect.ValueOf(constant.MakeFromLiteral("\"FOR\"", token.STRING, 0)),
		"ClauseOnConflict":  reflect.ValueOf(constant.MakeFromLiteral("\"ON CONFLICT\"", token.STRING, 0)),
		"ClauseValues":      reflect.ValueOf(constant.MakeFromLiteral("\"VALUES\"", token.STRING, 0)),
		"CreateClauses":     reflect.ValueOf(&mysql.CreateClauses).Elem(),
		"DefaultDriverName": reflect.ValueOf(constant.MakeFromLiteral("\"mysql\"", token.STRING, 0)),
		"DeleteClauses":     reflect.ValueOf(&mysql.DeleteClauses).Elem(),
		"New":               reflect.ValueOf(mysql.New),
		"Open":              reflect.ValueOf(mysql.Open),
		"QueryClauses":      reflect.ValueOf(&mysql.QueryClauses).Elem(),
		"UpdateClauses":     reflect.ValueOf(&mysql.UpdateClauses).Elem(),

		// type definitions
		"Config":    reflect.ValueOf((*mysql.Config)(nil)),
		"Dialector": reflect.ValueOf((*mysql.Dialector)(nil)),
		"Index":     reflect.ValueOf((*mysql.Index)(nil)),
		"Migrator":  reflect.ValueOf((*mysql.Migrator)(nil)),
	}
}
